How did viewing a diff between two versions of a file help you see the bug that was introduced?

The diff command enabled me to see inconsistencies between files.
Steps can then be taken to resolve.

Order could be:
Isolate difference...
Examine purpose for difference
Correct

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

No need to retype large code blocks.
Examine prior code to rediscover approaches.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google docs does?

Comments are present when manually committed.
More thoughtful conceptual and actual boundaries wrt program changes.
Make one commit per logical change!!

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?
Dependency relationships are visible
Any changes in a group of files (repo) are necessary to track in concert.
Also, in some cases (many cases?) it may not be required to manage changes across multiple files.


How can you use the commands git log and git diff to view the history of files?
  git log...general sense of the changes made
  git diff id1  id2 provides the exact changes made between one commit and anotherq

How might using version control make you more confident to make changes that could break something?
q
Much less worry due to ease of returning to prior state.

Now that you have your workspace set up, what do you want to try using Git for?

Managing code config locally.
Managing code config with local teams.
Managing code configs with web enabled collaborators.